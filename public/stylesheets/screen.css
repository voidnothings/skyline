@charset "UTF-8";
/****

  MAIN STYLESHEET for ***YOUR-SITE-NAME-HERE***

---------------------------------------------------------

  BUILT WITH SKYLINE: EVOLVING CSS ARCHITECTURE

  SKYLINE CREATED BY CRUSH & LOVELY ENGINEERING

  Jeff Schram         Adam Becker         Jacob Fentress
  (@jeffschram)       (@adambbecker)      (@jfentress)
  jeffschram.com      adambbecker.com     jacobfentress.com

---------------------------------------------------------


  ADDITIONAL CREDITS, INSPIRATION & SHOUT OUTS

  Harry Roberts       Chris Coyier        Brad Frost
  (@csswizardry)      (@crishcoyier)      (@bradfrost)
  csswizardry.com     css-tricks.com      patternlab.io
  inuitcss.com        codepen.io          bradfrostweb.com

  Jonathan Snook      Nicole Sullivan
  (@snook)            (@stubbornella)
  smaccs.com          stubbornella.org

  - For some mixins, naming conventions and OOCSS concepts
  - Check these guys out and learn from their awesomeness


  Nicolas Gallagher
  http://nicolasgallagher.com
  http://necolas.github.io/normalize.css/

  - For the reset


  HTML5 Boilerplate (@h5bp)
  html5boilerplate.com

  - For the print stylesheet


  Twitter Bootstrap (@twbootstrap)
  twitter.github.com/bootstrap

  - For some component ideas, naming conventions and javascript


  A quite note on navigating through these files:
  We are using @waypoints to allow you to easily search
  for certain sections. For instance, to get to the
  Table Of Contents (or toc) just search for "@toc"
  and you'll jump right to it.


---------------------------------------------------------

  TABLE OF CONTENTS
  @toc

  - Dependencies .... anything needed to compile this project
  - Base ............ foundations, mixins, functions, vars
  - Composition ..... layout objects like grids, containers
  - Elements ........ single elements
  - Modules ......... objects created by combining elements

---------------------------------------------------------  */
/***

  @dependencies
---------------------------------------------------------

  The only dependency here is Compass that allows us to
  handle vendor prefixes, and a few other useful things.

-----------------------------------------------------  */
/***

  @base
---------------------------------------------------------

  Your CSS begins with some global variables, a reset which
  is basically Normalize, some mixins, and a print stylesheet.

-----------------------------------------------------  */
/**

  @variables
---------------------------------------------------------
  base/vars.scss
--------------------------------------------------------

  Global variables are defined here.  Define your colors,
  spacing and grid settings.

-----------------------------------------------------  */
/* @colors
--------------------------------------------------------

  All color variables are defined here.

  We use real color names here.  Although naming something
  like 'brand' is in fact more generic and reusable, we've
  found that you end up creating variables like $brand-2,
  $brand-alt, $brand-complimentary etc.  While coding,
  it's too easy to forget what those mean.

  If the design changes drastically and the brand changes
  from, let's say, blue to green, just do a global
  find/replace - that's what text editors are for.

------------------------------------------------------ */
/* @breakpoints
---------------------------------------------------------

  Define global breakpoints as xs, sm, md, lg, xl

--------------------------------------------------------- */
/* @global spacing unit
---------------------------------------------------------

  Define an em value for $unit.  $unit is a helpful little
  variable that serves to keep your spacing consistent and
  looking at it's best.

  Most often, 1 $unit is equal to your baseline height.  So
  if your baseline height is 1.125ems (which is 18px), that's
  the value of 1 $unit.

  You can line your typography with $unit, space things out
  nice and consistently, and other stuff that'll be written
  here when I finsih this real copy.  Whoo.

--------------------------------------------------------- */
/**

  @reset
---------------------------------------------------------
  base/reset.scss
--------------------------------------------------------

  This reset institutes the border-box box model and then
  block and margin/padding resets.

  Throughout Skyline, each partial has it's own resets.
  This allows you to only use what you need.

  Many resets are based on normalize:
  http://normalize.css v2.1.0 http://git.io/normalize

--------------------------------------------------------- */
*, *:before, *:after {
  box-sizing: border-box;
  padding: 0;
  margin: 0; }

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary,
audio,
canvas,
video {
  display: block; }

/**

  @autoOrValue function
--------------------------------------------------------
  base/functions/_auto-or-value.scss
--------------------------------------------------------

  Function used by the spacing mixing to determine if
  the argument input is auto ('a' or 'auto') or a value

-----------------------------------------------------  */
/**

  @arrows mixin
----------------------------------------------------------
  base/mixins/_arrows.scss
----------------------------------------------------------

  A mixin to create an arrow relative to a parent.  Note
  that your parent element will need to have relative,
  absolute, or fixed position declared.

  The arguments are:

    Position: top / right / bottom / left
    Background Color
    Size
    Border Color
    Border Size

  Usage: Arguments for arrow() mixin
  @include arrow( $position, $bg-color, $size, $border-color, $border-size );

--------------------------------------------------------- */
/**

  @breakpoints mixin
-----------------------------------------------------
  base/mixins/breakpoints.scss
-----------------------------------------------------

  This mixin makes using inline media queries easy.
  Options include bp-at-least for min-width, bp-until
  for max-width, and bp-between for min and max widths.

  You can use your breakpoint vars, or any value.

  Usage: styles at medium breakpoint
  .some-element {
    @include bp-at-least($breakpoint__md){
      your-styles: go-here;
    }
  }

  Usage: styles at custom breakpoint
  .another-element {
    @include bp-until(83.45em){
      your-styles: go-here;
    }
  }

-----------------------------------------------------  */
/**

  @clearfix mixin
---------------------------------------------------------
  base/mixins/clearfix.scss
--------------------------------------------------------

  Use @include clearfix(); in your CSS

  Note: If you're using Compass, this mixin will replace the
  Compass clearfix() mixin.

  Usage: clearfix mixin
  .element-to-clearfix {
    @include cleafix();
  }


--------------------------------------------------------- */
/**

  @element queries mixin
-----------------------------------------------------
  base/mixins/_element-queries.scss
-----------------------------------------------------

  This mixin is a useful helper if you're using
  elementQuery.js, which adds element queries.

  Usage: Add some styles for something at least 20em wide
  .your-element {
    @include element-at-least(20em){
      your-styles: go-here;
    }
  }

  Usage: Add some styles for something at least 10em high
  .your-element {
    @include element-height-at-least(10em){
      your-styles: go-here;
    }
  }

  To make this even easier, use the Skyline sublime
  snippets [ elw ] and [ elh ]

-----------------------------------------------------  */
/**

  @flexbox helpers
--------------------------------------------------------
  base/mixins/flexbox.scss
--------------------------------------------------------

  Mixins that provide you with all the crazy flexbox
  prefixes etc.

------------------------------------------------------ */
/**

  @font-face import mixin
-----------------------------------------------------------
  base/mixins/_font-face-importer.scss
-----------------------------------------------------------

  Use this mixin to embed a font

  $font-name is used in your css in font-family declarations
  $font-filepath-and-name is the location of your font
  file and the filename WITHOUT the file extension.  The
  extensions are added here in the mixin

  Usage: Arguments for embed-font() mixin.
  @include embed-font($font-name, $font-filepath-and-name);

--------------------------------------------------------- */
/**

 @gradual media queries mixin
--------------------------------------------------------
  base/mixins/_gradual-media-queries.scss
-----------------------------------------------------------

  The mixin takes arguments of start-width, start-fontsize,
  end-width, and end-fontsize and then creates media queries
  between those start and end points at another argument
  value, increment-width.

  Usage: Apply gradual media queries to the html element
  html {
    @include gradual-media-queries($breakpoint__xs, 75%, $breakpoint__xl, 150%, 20em);
  }

------------------------------------------------------ */
/**

  @spacing mixin
--------------------------------------------------------
  base/mixins/_spacing.css
-----------------------------------------------------------

  Mixin for consistent spacing.  It accepts integers, which
  create multiples of the $spacing unit, 'a' or 'auto' which
  creates a value of 'auto', or 'n' which does not create anything
  and is just ignored.

  Usage: include padding of 1 spacing unit at top, 2 at bottom
  .example-module {
    @include padding(1 n 2 n);
  }

-----------------------------------------------------  */
/**

  @print
--------------------------------------------------------
  base/print.scss
--------------------------------------------------------

  Print Stylesheet from http://h5bp.com/r

-----------------------------------------------------  */
/* ==========================================================================
   Print styles.
   Inlined to avoid required HTTP connection: h5bp.com/r
   CREDIT: HTML5 Boilerplate
   ========================================================================== */
@media print {
  * {
    background: transparent !important;
    color: #000 !important;
    /* Black prints faster: h5bp.com/s */
    box-shadow: none !important;
    text-shadow: none !important; }

  a,
  a:visited {
    text-decoration: underline; }

  a[href]:after {
    content: " (" attr(href) ")"; }

  abbr[title]:after {
    content: " (" attr(title) ")"; }

  .ir a:after,
  a[href^="javascript:"]:after,
  a[href^="#"]:after {
    content: ""; }

  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid; }

  thead {
    display: table-header-group;
    /* h5bp.com/t */ }

  tr,
  img {
    page-break-inside: avoid; }

  img {
    max-width: 100% !important; }

  @page {
    margin: 0.5cm; }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3; }

  h2,
  h3 {
    page-break-after: avoid; } }
/***

  @composition
---------------------------------------------------------

  A large portion of CSS is structural layout. You will use
  these helpers to create the scaffolding that will support
  the elements that make up your site.

  Comment out any partial you don't need for this app.

---------------------------------------------------------  */
/**

  @container
--------------------------------------------------------
  composition/container.scss
--------------------------------------------------------

  Restricts content to the site's max width
  but allows for full color bars for sections.

  Example: Container
  <section class="awesome-section-with-background-color">
    <div class="container">
      <article style='width: 100%; height: 5em; background-color: #eee; border: 1px solid #ccc;'>.</article>
    </div>
  </section>

------------------------------------------------------ */
.container {
  zoom: 1;
  margin: 0 auto;
  max-width: 64rem;
  padding-right: 1.125em;
  padding-left: 1.125em; }
  .container:before, .container:after {
    content: " ";
    display: table; }
  .container:after {
    clear: both; }
  @media screen and (min-width: 34.375em) {
    .container {
      padding-right: 2.25em; } }
  @media screen and (min-width: 48em) {
    .container {
      padding-right: 2.25em; } }
  @media screen and (min-width: 64em) {
    .container {
      padding-right: 3.375em; } }
  @media screen and (min-width: 78.5em) {
    .container {
      padding-right: 4.5em; } }
  @media screen and (min-width: 100em) {
    .container {
      padding-right: 5.625em; } }
  @media screen and (min-width: 34.375em) {
    .container {
      padding-left: 2.25em; } }
  @media screen and (min-width: 48em) {
    .container {
      padding-left: 2.25em; } }
  @media screen and (min-width: 64em) {
    .container {
      padding-left: 3.375em; } }
  @media screen and (min-width: 78.5em) {
    .container {
      padding-left: 4.5em; } }
  @media screen and (min-width: 100em) {
    .container {
      padding-left: 5.625em; } }

/**

  @widths
---------------------------------------------------------
  composition/widths.scss
--------------------------------------------------------

  Global Width Classes like .one-third or .seven-twelfths

  If you append the width class with a size indicator, the
  size will only be applied if the viewport is at least
  at that breakpoint size.  For instance, to apply a width
  of 50% to a div once it is at a large size, use
  .lg-one-half

  Note: we can probably write this partial using a recursive
  loop instead of just writing it all out like it is
  currently.  (nice to have)

---------------------------------------------------------  */
.one-whole {
  width: 100%; }

.one-half {
  width: 50%; }

.one-third {
  width: 33.333%; }

.two-thirds {
  width: 66.666%; }

.one-fourth {
  width: 25%; }

.two-fourths {
  width: 50%; }

.three-fourths {
  width: 75%; }

.one-fifth {
  width: 20%; }

.two-fifths {
  width: 40%; }

.three-fifths {
  width: 60%; }

.four-fifths {
  width: 80%; }

.one-sixth {
  width: 16.666%; }

.two-sixths {
  width: 33.333%; }

.three-sixths {
  width: 50%; }

.four-sixths {
  width: 66.666%; }

.five-sixths {
  width: 83.333%; }

.one-eighth {
  width: 12.5%; }

.two-eighths {
  width: 25%; }

.three-eighths {
  width: 37.5%; }

.four-eighths {
  width: 50%; }

.five-eighths {
  width: 62.5%; }

.six-eighths {
  width: 75%; }

.seven-eighths {
  width: 87.5%; }

.one-tenth {
  width: 10%; }

.two-tenths {
  width: 20%; }

.three-tenths {
  width: 30%; }

.four-tenths {
  width: 40%; }

.five-tenths {
  width: 50%; }

.six-tenths {
  width: 60%; }

.seven-tenths {
  width: 70%; }

.eight-tenths {
  width: 80%; }

.nine-tenths {
  width: 90%; }

.one-twelfth {
  width: 8.333%; }

.two-twelfths {
  width: 16.666%; }

.three-twelfths {
  width: 25%; }

.four-twelfths {
  width: 33.333%; }

.five-twelfths {
  width: 41.666%; }

.six-twelfths {
  width: 50%; }

.seven-twelfths {
  width: 58.333%; }

.eight-twelfths {
  width: 66.666%; }

.nine-twelfths {
  width: 75%; }

.ten-twelfths {
  width: 83.333%; }

.eleven-twelfths {
  width: 91.666%; }

@media screen and (min-width: 34.375em) {
  .sm-one-whole {
    width: 100%; }

  .sm-one-half {
    width: 50%; }

  .sm-one-third {
    width: 33.333%; }

  .sm-two-thirds {
    width: 66.666%; }

  .sm-one-fourth {
    width: 25%; }

  .sm-two-fourths {
    width: 50%; }

  .sm-three-fourths {
    width: 75%; }

  .sm-one-fifth {
    width: 20%; }

  .sm-two-fifths {
    width: 40%; }

  .sm-three-fifths {
    width: 60%; }

  .sm-four-fifths {
    width: 80%; }

  .sm-one-sixth {
    width: 16.666%; }

  .sm-two-sixths {
    width: 33.333%; }

  .sm-three-sixths {
    width: 50%; }

  .sm-four-sixths {
    width: 66.666%; }

  .sm-five-sixths {
    width: 83.333%; }

  .sm-one-eighth {
    width: 12.5%; }

  .sm-two-eighths {
    width: 25%; }

  .sm-three-eighths {
    width: 37.5%; }

  .sm-four-eighths {
    width: 50%; }

  .sm-five-eighths {
    width: 62.5%; }

  .sm-six-eighths {
    width: 75%; }

  .sm-seven-eighths {
    width: 87.5%; }

  .sm-one-tenth {
    width: 10%; }

  .sm-two-tenths {
    width: 20%; }

  .sm-three-tenths {
    width: 30%; }

  .sm-four-tenths {
    width: 40%; }

  .sm-five-tenths {
    width: 50%; }

  .sm-six-tenths {
    width: 60%; }

  .sm-seven-tenths {
    width: 70%; }

  .sm-eight-tenths {
    width: 80%; }

  .sm-nine-tenths {
    width: 90%; }

  .sm-one-twelfth {
    width: 8.333%; }

  .sm-two-twelfths {
    width: 16.666%; }

  .sm-three-twelfths {
    width: 25%; }

  .sm-four-twelfths {
    width: 33.333%; }

  .sm-five-twelfths {
    width: 41.666%; }

  .sm-six-twelfths {
    width: 50%; }

  .sm-seven-twelfths {
    width: 58.333%; }

  .sm-eight-twelfths {
    width: 66.666%; }

  .sm-nine-twelfths {
    width: 75%; }

  .sm-ten-twelfths {
    width: 83.333%; }

  .sm-eleven-twelfths {
    width: 91.666%; } }
@media screen and (min-width: 48em) {
  .md-one-whole {
    width: 100%; }

  .md-one-half {
    width: 50%; }

  .md-one-third {
    width: 33.333%; }

  .md-two-thirds {
    width: 66.666%; }

  .md-one-fourth {
    width: 25%; }

  .md-two-fourths {
    width: 50%; }

  .md-three-fourths {
    width: 75%; }

  .md-one-fifth {
    width: 20%; }

  .md-two-fifths {
    width: 40%; }

  .md-three-fifths {
    width: 60%; }

  .md-four-fifths {
    width: 80%; }

  .md-one-sixth {
    width: 16.666%; }

  .md-two-sixths {
    width: 33.333%; }

  .md-three-sixths {
    width: 50%; }

  .md-four-sixths {
    width: 66.666%; }

  .md-five-sixths {
    width: 83.333%; }

  .md-one-eighth {
    width: 12.5%; }

  .md-two-eighths {
    width: 25%; }

  .md-three-eighths {
    width: 37.5%; }

  .md-four-eighths {
    width: 50%; }

  .md-five-eighths {
    width: 62.5%; }

  .md-six-eighths {
    width: 75%; }

  .md-seven-eighths {
    width: 87.5%; }

  .md-one-tenth {
    width: 10%; }

  .md-two-tenths {
    width: 20%; }

  .md-three-tenths {
    width: 30%; }

  .md-four-tenths {
    width: 40%; }

  .md-five-tenths {
    width: 50%; }

  .md-six-tenths {
    width: 60%; }

  .md-seven-tenths {
    width: 70%; }

  .md-eight-tenths {
    width: 80%; }

  .md-nine-tenths {
    width: 90%; }

  .md-one-twelfth {
    width: 8.333%; }

  .md-two-twelfths {
    width: 16.666%; }

  .md-three-twelfths {
    width: 25%; }

  .md-four-twelfths {
    width: 33.333%; }

  .md-five-twelfths {
    width: 41.666%; }

  .md-six-twelfths {
    width: 50%; }

  .md-seven-twelfths {
    width: 58.333%; }

  .md-eight-twelfths {
    width: 66.666%; }

  .md-nine-twelfths {
    width: 75%; }

  .md-ten-twelfths {
    width: 83.333%; }

  .md-eleven-twelfths {
    width: 91.666%; } }
@media screen and (min-width: 64em) {
  .lg-one-whole {
    width: 100%; }

  .lg-one-half {
    width: 50%; }

  .lg-one-third {
    width: 33.333%; }

  .lg-two-thirds {
    width: 66.666%; }

  .lg-one-fourth {
    width: 25%; }

  .lg-two-fourths {
    width: 50%; }

  .lg-three-fourths {
    width: 75%; }

  .lg-one-fifth {
    width: 20%; }

  .lg-two-fifths {
    width: 40%; }

  .lg-three-fifths {
    width: 60%; }

  .lg-four-fifths {
    width: 80%; }

  .lg-one-sixth {
    width: 16.666%; }

  .lg-two-sixths {
    width: 33.333%; }

  .lg-three-sixths {
    width: 50%; }

  .lg-four-sixths {
    width: 66.666%; }

  .lg-five-sixths {
    width: 83.333%; }

  .lg-one-eighth {
    width: 12.5%; }

  .lg-two-eighths {
    width: 25%; }

  .lg-three-eighths {
    width: 37.5%; }

  .lg-four-eighths {
    width: 50%; }

  .lg-five-eighths {
    width: 62.5%; }

  .lg-six-eighths {
    width: 75%; }

  .lg-seven-eighths {
    width: 87.5%; }

  .lg-one-tenth {
    width: 10%; }

  .lg-two-tenths {
    width: 20%; }

  .lg-three-tenths {
    width: 30%; }

  .lg-four-tenths {
    width: 40%; }

  .lg-five-tenths {
    width: 50%; }

  .lg-six-tenths {
    width: 60%; }

  .lg-seven-tenths {
    width: 70%; }

  .lg-eight-tenths {
    width: 80%; }

  .lg-nine-tenths {
    width: 90%; }

  .lg-one-twelfth {
    width: 8.333%; }

  .lg-two-twelfths {
    width: 16.666%; }

  .lg-three-twelfths {
    width: 25%; }

  .lg-four-twelfths {
    width: 33.333%; }

  .lg-five-twelfths {
    width: 41.666%; }

  .lg-six-twelfths {
    width: 50%; }

  .lg-seven-twelfths {
    width: 58.333%; }

  .lg-eight-twelfths {
    width: 66.666%; }

  .lg-nine-twelfths {
    width: 75%; }

  .lg-ten-twelfths {
    width: 83.333%; }

  .lg-eleven-twelfths {
    width: 91.666%; } }
@media screen and (min-width: 78.5em) {
  .xl-one-whole {
    width: 100%; }

  .xl-one-half {
    width: 50%; }

  .xl-one-third {
    width: 33.333%; }

  .xl-two-thirds {
    width: 66.666%; }

  .xl-one-fourth {
    width: 25%; }

  .xl-two-fourths {
    width: 50%; }

  .xl-three-fourths {
    width: 75%; }

  .xl-one-fifth {
    width: 20%; }

  .xl-two-fifths {
    width: 40%; }

  .xl-three-fifths {
    width: 60%; }

  .xl-four-fifths {
    width: 80%; }

  .xl-one-sixth {
    width: 16.666%; }

  .xl-two-sixths {
    width: 33.333%; }

  .xl-three-sixths {
    width: 50%; }

  .xl-four-sixths {
    width: 66.666%; }

  .xl-five-sixths {
    width: 83.333%; }

  .xl-one-eighth {
    width: 12.5%; }

  .xl-two-eighths {
    width: 25%; }

  .xl-three-eighths {
    width: 37.5%; }

  .xl-four-eighths {
    width: 50%; }

  .xl-five-eighths {
    width: 62.5%; }

  .xl-six-eighths {
    width: 75%; }

  .xl-seven-eighths {
    width: 87.5%; }

  .xl-one-tenth {
    width: 10%; }

  .xl-two-tenths {
    width: 20%; }

  .xl-three-tenths {
    width: 30%; }

  .xl-four-tenths {
    width: 40%; }

  .xl-five-tenths {
    width: 50%; }

  .xl-six-tenths {
    width: 60%; }

  .xl-seven-tenths {
    width: 70%; }

  .xl-eight-tenths {
    width: 80%; }

  .xl-nine-tenths {
    width: 90%; }

  .xl-one-twelfth {
    width: 8.333%; }

  .xl-two-twelfths {
    width: 16.666%; }

  .xl-three-twelfths {
    width: 25%; }

  .xl-four-twelfths {
    width: 33.333%; }

  .xl-five-twelfths {
    width: 41.666%; }

  .xl-six-twelfths {
    width: 50%; }

  .xl-seven-twelfths {
    width: 58.333%; }

  .xl-eight-twelfths {
    width: 66.666%; }

  .xl-nine-twelfths {
    width: 75%; }

  .xl-ten-twelfths {
    width: 83.333%; }

  .xl-eleven-twelfths {
    width: 91.666%; } }
/**

  @ups
--------------------------------------------------------
  composition/ups.scss
--------------------------------------------------------

  UPS?

  Yep, ups.  These are global classes that will set
  their direct children to a specific width.  You will
  mainly use these in grids, and maybe with tabs or
  navigations.

  For instance: four-up will set each child to 25%

  Example: Ups and grids
  <div class="gw two-up">
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
  </div><!--/gw-->
  <div class="gw three-up">
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
  </div><!--/gw-->

  Ups work like widths in that they have responsive behavior.  If
  you prepend an up class with a responsive prefix, like (s for small
  or m for medium) the behaviour will only kick in at those
  viewports.

  For example, if you want your gallery to be two-up at the smallest
  viewport, four-up at medium, six-up at large, and eight-up on the largest then use
  this.

  Example: Responsive Ups
  <div class="gw two-up m-four-up l-six-up xl-eight-up">
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
  </div><!--/gw-->

-----------------------------------------------------  */
.two-up > * {
  width: 50%;
  float: left; }

.three-up > * {
  width: 33.333333%;
  float: left; }

.four-up > * {
  width: 25%;
  float: left; }

.five-up > * {
  width: 20%;
  float: left; }

.six-up > * {
  width: 16.6666666%;
  float: left; }

.seven-up > * {
  width: 14.285714286%;
  float: left; }

.eight-up > * {
  width: 12.5%;
  float: left; }

.nine-up > * {
  width: 11.111111111%;
  float: left; }

.ten-up {
  width: 10%;
  float: left; }

.eleven-up > * {
  width: 9.090909091%;
  float: left; }

.twelve-up > * {
  width: 8.333333333%;
  float: left; }

@media screen and (min-width: 20em) {
  .sm-two-up > * {
    width: 50%; }

  .sm-three-up > * {
    width: 33.333333%; }

  .sm-four-up > * {
    width: 25%; }

  .sm-five-up > * {
    width: 20%; }

  .sm-six-up > * {
    width: 16.6666666%; }

  .sm-seven-up > * {
    width: 14.285714286%; }

  .sm-eight-up > * {
    width: 12.5%; }

  .sm-nine-up > * {
    width: 11.111111111%; }

  .sm-ten-up {
    width: 10%; }

  .sm-eleven-up > * {
    width: 9.090909091%; }

  .sm-twelve-up > * {
    width: 8.333333333%; } }
@media screen and (min-width: 34.375em) {
  .sm-two-up > * {
    width: 50%; }

  .sm-three-up > * {
    width: 33.333333%; }

  .sm-four-up > * {
    width: 25%; }

  .sm-five-up > * {
    width: 20%; }

  .sm-six-up > * {
    width: 16.6666666%; }

  .sm-seven-up > * {
    width: 14.285714286%; }

  .sm-eight-up > * {
    width: 12.5%; }

  .sm-nine-up > * {
    width: 11.111111111%; }

  .sm-ten-up {
    width: 10%; }

  .sm-eleven-up > * {
    width: 9.090909091%; }

  .sm-twelve-up > * {
    width: 8.333333333%; } }
@media screen and (min-width: 48em) {
  .md-two-up > * {
    width: 50%; }

  .md-three-up > * {
    width: 33.333333%; }

  .md-four-up > * {
    width: 25%; }

  .md-five-up > * {
    width: 20%; }

  .md-six-up > * {
    width: 16.6666666%; }

  .md-seven-up > * {
    width: 14.285714286%; }

  .md-eight-up > * {
    width: 12.5%; }

  .md-nine-up > * {
    width: 11.111111111%; }

  .md-ten-up {
    width: 10%; }

  .md-eleven-up > * {
    width: 9.090909091%; }

  .md-twelve-up > * {
    width: 8.333333333%; } }
@media screen and (min-width: 64em) {
  .lg-two-up > * {
    width: 50%; }

  .lg-three-up > * {
    width: 33.333333%; }

  .lg-four-up > * {
    width: 25%; }

  .lg-five-up > * {
    width: 20%; }

  .lg-six-up > * {
    width: 16.6666666%; }

  .lg-seven-up > * {
    width: 14.285714286%; }

  .lg-eight-up > * {
    width: 12.5%; }

  .lg-nine-up > * {
    width: 11.111111111%; }

  .lg-ten-up {
    width: 10%; }

  .lg-eleven-up > * {
    width: 9.090909091%; }

  .lg-twelve-up > * {
    width: 8.333333333%; } }
@media screen and (min-width: 78.5em) {
  .xl-two-up > * {
    width: 50%; }

  .xl-three-up > * {
    width: 33.333333%; }

  .xl-four-up > * {
    width: 25%; }

  .xl-five-up > * {
    width: 20%; }

  .xl-six-up > * {
    width: 16.6666666%; }

  .xl-seven-up > * {
    width: 14.285714286%; }

  .xl-eight-up > * {
    width: 12.5%; }

  .xl-nine-up > * {
    width: 11.111111111%; }

  .xl-ten-up {
    width: 10%; }

  .xl-eleven-up > * {
    width: 9.090909091%; }

  .xl-twelve-up > * {
    width: 8.333333333%; } }
/**

  @grids
---------------------------------------------------------
  composition/_grids.scss
--------------------------------------------------------

  Skyline uses a simple grid system.  It starts with
  a wrapper div that can have a classname of .grid-wrap
  or .gw for short.  Inside of that div, you'll nest
  your grid units.  These are divs with classname of
  either .grid or .g for short.

  For a grid wrap containing equally-sized grid units, like
  a gallery of thumbnails for instance, you can use
  'ups' (composition/_ups.scss). If you do this, you won't need
  to specify the widths on each grid unit.

  For individual sizes, combine .g/.grid
  divs with width classes like .one-third and you're all
  set to go.

  Grid units can use responsive width classes.  Prepend
  the width with the size like .md-one-third.

------------------------------------------------------ */
/* @grid settings
---------------------------------------------------------

  Define breakpoint at which default grid-units stack.

--------------------------------------------------------- */
/* @grid wrappers and grid units
--------------------------------------------------------

  Example: Grid
  <div class="gw two-up">
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
  </div><!--/gw-->
  <div class="gw three-up">
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
  </div><!--/gw-->
  <div class="gw six-up">
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
  </div><!--/gw-->
   <div class="gw twelve-up">
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
    <div class="g"><img src="http://fillmurray.com/500/300"></div>
  </div><!--/gw-->
  <div class="gw">
    <div class="g one-fourth"><img src="http://fillmurray.com/500/300"></div>
    <div class="g one-half"><img src="http://fillmurray.com/500/300"></div>
    <div class="g one-eighth"><img src="http://fillmurray.com/500/300"></div>
    <div class="g one-eighth"><img src="http://fillmurray.com/500/300"></div>
  </div><!--/gw-->

------------------------------------------------------ */
.grid-wrap,
.gw {
  zoom: 1;
  list-style-type: none; }
  .grid-wrap:before, .grid-wrap:after,
  .gw:before,
  .gw:after {
    content: " ";
    display: table; }
  .grid-wrap:after,
  .gw:after {
    clear: both; }
  @media screen and (min-width: 20em) {
    .grid-wrap,
    .gw {
      margin-right: -0.5625em;
      margin-left: -0.5625em; } }
    @media screen and (min-width: 20em) and (min-width: 34.375em) {
      .grid-wrap,
      .gw {
        margin-right: -1.125em; } }
    @media screen and (min-width: 20em) and (min-width: 48em) {
      .grid-wrap,
      .gw {
        margin-right: -1.125em; } }
    @media screen and (min-width: 20em) and (min-width: 64em) {
      .grid-wrap,
      .gw {
        margin-right: -1.6875em; } }
    @media screen and (min-width: 20em) and (min-width: 78.5em) {
      .grid-wrap,
      .gw {
        margin-right: -2.25em; } }
    @media screen and (min-width: 20em) and (min-width: 100em) {
      .grid-wrap,
      .gw {
        margin-right: -2.8125em; } }
    @media screen and (min-width: 20em) and (min-width: 34.375em) {
      .grid-wrap,
      .gw {
        margin-left: -1.125em; } }
    @media screen and (min-width: 20em) and (min-width: 48em) {
      .grid-wrap,
      .gw {
        margin-left: -1.125em; } }
    @media screen and (min-width: 20em) and (min-width: 64em) {
      .grid-wrap,
      .gw {
        margin-left: -1.6875em; } }
    @media screen and (min-width: 20em) and (min-width: 78.5em) {
      .grid-wrap,
      .gw {
        margin-left: -2.25em; } }
    @media screen and (min-width: 20em) and (min-width: 100em) {
      .grid-wrap,
      .gw {
        margin-left: -2.8125em; } }

.grid,
.g {
  zoom: 1;
  min-height: 1rem;
  position: relative;
  padding-bottom: 1.125em; }
  .grid:before, .grid:after,
  .g:before,
  .g:after {
    content: " ";
    display: table; }
  .grid:after,
  .g:after {
    clear: both; }
  @media screen and (min-width: 34.375em) {
    .grid,
    .g {
      padding-bottom: 2.25em; } }
  @media screen and (min-width: 48em) {
    .grid,
    .g {
      padding-bottom: 2.25em; } }
  @media screen and (min-width: 64em) {
    .grid,
    .g {
      padding-bottom: 3.375em; } }
  @media screen and (min-width: 78.5em) {
    .grid,
    .g {
      padding-bottom: 4.5em; } }
  @media screen and (min-width: 100em) {
    .grid,
    .g {
      padding-bottom: 5.625em; } }
  .grid:last-of-type,
  .g:last-of-type {
    padding-bottom: 0; }
  @media screen and (min-width: 20em) {
    .grid,
    .g {
      padding-right: 0.5625em;
      padding-bottom: 1.125em;
      padding-left: 0.5625em;
      float: left; } }
    @media screen and (min-width: 20em) and (min-width: 34.375em) {
      .grid,
      .g {
        padding-right: 1.125em; } }
    @media screen and (min-width: 20em) and (min-width: 48em) {
      .grid,
      .g {
        padding-right: 1.125em; } }
    @media screen and (min-width: 20em) and (min-width: 64em) {
      .grid,
      .g {
        padding-right: 1.6875em; } }
    @media screen and (min-width: 20em) and (min-width: 78.5em) {
      .grid,
      .g {
        padding-right: 2.25em; } }
    @media screen and (min-width: 20em) and (min-width: 100em) {
      .grid,
      .g {
        padding-right: 2.8125em; } }
    @media screen and (min-width: 20em) and (min-width: 34.375em) {
      .grid,
      .g {
        padding-bottom: 2.25em; } }
    @media screen and (min-width: 20em) and (min-width: 48em) {
      .grid,
      .g {
        padding-bottom: 2.25em; } }
    @media screen and (min-width: 20em) and (min-width: 64em) {
      .grid,
      .g {
        padding-bottom: 3.375em; } }
    @media screen and (min-width: 20em) and (min-width: 78.5em) {
      .grid,
      .g {
        padding-bottom: 4.5em; } }
    @media screen and (min-width: 20em) and (min-width: 100em) {
      .grid,
      .g {
        padding-bottom: 5.625em; } }
    @media screen and (min-width: 20em) and (min-width: 34.375em) {
      .grid,
      .g {
        padding-left: 1.125em; } }
    @media screen and (min-width: 20em) and (min-width: 48em) {
      .grid,
      .g {
        padding-left: 1.125em; } }
    @media screen and (min-width: 20em) and (min-width: 64em) {
      .grid,
      .g {
        padding-left: 1.6875em; } }
    @media screen and (min-width: 20em) and (min-width: 78.5em) {
      .grid,
      .g {
        padding-left: 2.25em; } }
    @media screen and (min-width: 20em) and (min-width: 100em) {
      .grid,
      .g {
        padding-left: 2.8125em; } }

/* @table grids
--------------------------------------------------------

  Grids that behave as tables and table cells at certain
  viewports

------------------------------------------------------ */
@media screen and (min-width: 20em) {
  .xs-tw {
    display: table;
    width: 100%;
    border-collapse: collapse; }

  .xs-t {
    display: table-cell;
    float: none;
    vertical-align: top; } }
@media screen and (min-width: 34.375em) {
  .sm-tw {
    display: table;
    width: 100%;
    border-collapse: collapse; }

  .sm-t {
    display: table-cell;
    float: none;
    vertical-align: top; } }
@media screen and (min-width: 48em) {
  .md-tw {
    display: table;
    width: 100%;
    border-collapse: collapse; }

  .md-t {
    display: table-cell;
    float: none;
    vertical-align: top; } }
@media screen and (min-width: 64em) {
  .lg-tw {
    display: table;
    width: 100%;
    border-collapse: collapse; }

  .lg-t {
    display: table-cell;
    float: none;
    vertical-align: top; } }
@media screen and (min-width: 78.5em) {
  .xl-tw {
    display: table;
    width: 100%;
    border-collapse: collapse; }

  .xl-t {
    display: table-cell;
    float: none;
    vertical-align: top; } }
/**

  @media
--------------------------------------------------------
  composition/media.scss
--------------------------------------------------------

  The 'media' object is a common pattern in OOCSS.
  It consists of a wrapper element with a classname of
  .media and then two child elements, one that contains
  an image or video that is floated, and the other
  contains text.

  This used commonly in bios, or comments where you
  have an avatar to one site, and the comment next to it.

  Source: http://www.stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code/

-----------------------------------------------------  */
/* @media objects
---------------------------------------------------------

  Example: Media object, left
  <article class="media">
    <div class="media__left one-fifth">
      <img src="http://fillmurray.com/300/300">
    </div>
    <div class="media__body">
      <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>
    </div>
  </article>

  Example: Media object, right
  <article class="media">
    <div class="media__right one-fifth">
      <img src="http://fillmurray.com/300/300">
    </div>
    <div class="media__body">
      <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>
    </div>
  </article>

---------------------------------------------------------  */
.media {
  display: block;
  zoom: 1;
  margin-bottom: 1em; }
  .media:before, .media:after {
    content: " ";
    display: table; }
  .media:after {
    clear: both; }

.media__left {
  float: left;
  margin-right: 1em; }

.media__right {
  float: right;
  margin-left: 1em; }

.media__left img,
.media__right img {
  display: block; }

.media__body {
  overflow: hidden; }

.media__body,
.media__body > :last-child {
  margin-bottom: 0; }

/**

  @hide
---------------------------------------------------------
  composition/hide.scss
--------------------------------------------------------

  Utility state classes to hide things in different ways

--------------------------------------------------------- */
/* @is-hidden
--------------------------------------------------------

  The classic, display: none;

  Example: The element below is hidden
  <h1 class="is-hidden">I'm hiding<h1>

------------------------------------------------------ */
.is-hidden {
  display: none; }

/* @is-visually-hidden
--------------------------------------------------------

  Use this if you still need js access to this element
  it's visually hidden but still in the DOM

  Example: The element below is hidden
  <h1 class="is-visually-hidden">I'm hiding<h1>

------------------------------------------------------ */
.is-visually-hidden {
  position: absolute;
  left: -9999%;
  height: 0;
  padding: 0;
  margin: 0;
  opacity: 0;
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

/* @responsive hiders
--------------------------------------------------------

  These are helper classes to hide an element at a
  certain breakpoint and above.

  Example: Responsive Hiders
  <p class="xs-is-hidden">You should only see me below the xs breakpoint</p>
  <p class="sm-is-hidden">You should only see me below the sm breakpoint</p>
  <p class="md-is-hidden">You should only see me below the md breakpoint</p>
  <p class="lg-is-hidden">You should only see me below the lg breakpoint</p>
  <p class="xl-is-hidden">You should only see me below the xl breakpoint</p>

------------------------------------------------------ */
@media screen and (min-width: 20em) {
  .xs-is-hidden {
    display: none; }

  .xs-is-visually-hidden {
    position: absolute;
    left: -9999%;
    height: 0;
    padding: 0;
    margin: 0;
    opacity: 0;
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px; } }
@media screen and (min-width: 34.375em) {
  .sm-is-hidden {
    display: none; }

  .sm-is-visually-hidden {
    position: absolute;
    left: -9999%;
    height: 0;
    padding: 0;
    margin: 0;
    opacity: 0;
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px; } }
@media screen and (min-width: 48em) {
  .md-is-hidden {
    display: none; }

  .md-is-visually-hidden {
    position: absolute;
    left: -9999%;
    height: 0;
    padding: 0;
    margin: 0;
    opacity: 0;
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px; } }
@media screen and (min-width: 64em) {
  .lg-is-hidden {
    display: none; }

  .lg-is-visually-hidden {
    position: absolute;
    left: -9999%;
    height: 0;
    padding: 0;
    margin: 0;
    opacity: 0;
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px; } }
@media screen and (min-width: 78.5em) {
  .xl-is-hidden {
    display: none; }

  .xl-is-visually-hidden {
    position: absolute;
    left: -9999%;
    height: 0;
    padding: 0;
    margin: 0;
    opacity: 0;
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px; } }
/***

  @elements
---------------------------------------------------------

  Global styling of elements.

---------------------------------------------------------  */
/**

  @fonts
--------------------------------------------------------
  elements/fonts.scss
--------------------------------------------------------

  Define the fonts used in this app and declare variables
  and sass placeholders to be used in your CSS.

  If you are using a webfont, see the base/_mixins.scss
  file for deets on the font embed mixin that is used to
  embed webfonts.

  for example, to create a font-family named "interstate-light"
  using a font at /fonts/interstate_light-webfont.woff (and other extensions)

  @include embed-font("interstate-light", "/fonts/interstate_light-webfont");

-------------------------------------------------------- */
/* @sans stack
--------------------------------------------------------

  A global sans font stack.

  Usage: Use the sans stack
  .element {
    font-family: $sans;
  }

  Placeholder classes are also defined to include additional
  properties like font-weight and font-style.

  Usage: Use sans light on an element
  .element {
    @extend %sans--light;
  }

------------------------------------------------------ */
.thumbnail__caption h2 {
  font-family: helvetica, sans-serif;
  font-weight: 300;
  font-style: normal; }

.btn {
  font-family: helvetica, sans-serif;
  font-weight: 700;
  font-style: normal; }

/* @serif stack
--------------------------------------------------------

  A global serif font stack.

  Usage: Use the serif stack
  .element {
    font-family: $serif;
  }

  Placeholder classes are also defined to include additional
  properties like font-weight and font-style.

  Usage: Use serif light on an element
  .element {
    @extend %serif--light;
  }

------------------------------------------------------ */
input[type=text],
input[type=password],
input[type=email],
input[type=url],
input[type=number],
input[type=datetime],
input[type=date],
input[type=tel],
input[type=month],
input[type=week],
input[type=search],
input[type=submit], input::-webkit-input-placeholder, input:-moz-placeholder, textarea, .page__title h1, .thumbnail__caption h3 {
  font-family: georgia, times;
  font-weight: 300;
  font-style: normal;
  color: red; }

body {
  font-family: georgia, times;
  font-weight: 400;
  font-style: normal; }

/**

   @HTML
--------------------------------------------------------

  HTML should contain the site's default background color
  and font-size

------------------------------------------------------ */
@media (min-width: 20em) {
  html {
    font-size: 75%; } }
@media (min-width: 25em) {
  html {
    font-size: 77.08333%; } }
@media (min-width: 30em) {
  html {
    font-size: 79.16667%; } }
@media (min-width: 35em) {
  html {
    font-size: 81.25%; } }
@media (min-width: 40em) {
  html {
    font-size: 83.33333%; } }
@media (min-width: 45em) {
  html {
    font-size: 85.41667%; } }
@media (min-width: 50em) {
  html {
    font-size: 87.5%; } }
@media (min-width: 55em) {
  html {
    font-size: 89.58333%; } }
@media (min-width: 60em) {
  html {
    font-size: 91.66667%; } }
@media (min-width: 65em) {
  html {
    font-size: 93.75%; } }
@media (min-width: 70em) {
  html {
    font-size: 95.83333%; } }
@media (min-width: 75em) {
  html {
    font-size: 97.91667%; } }
@media (min-width: 80em) {
  html {
    font-size: 100%; } }

* {
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

/**

  @body
--------------------------------------------------------
  elements/_body.scss
--------------------------------------------------------

  Body should contain the document's default font and
  background color for the content, if that background
  color is different than the html.

------------------------------------------------------ */
body {
  line-height: 1.5;
  color: #515554;
  background: white; }

/**

  @code
--------------------------------------------------------

  Code elements like <code> and <pre>

  Example: Code in a paragraph
  <p>This is a cool paragraph about a classname called <code>.franz</code></p>


-----------------------------------------------------  */
code {
  vertical-align: middle;
  padding: .25em .5em;
  background: rgba(193, 199, 208, 0.3); }

/**

  @headings
--------------------------------------------------------
  elements/headings.scss
--------------------------------------------------------

  We set any base styles for any headings that have
  no classnames.

  Example: Headings
  <h1>This is an h1 heading</h1>
  <h2>This is an h2 heading</h2>
  <h3>This is an h3 heading</h3>
  <h4>This is an h4 heading</h4>
  <h5>This is an h5 heading</h5>
  <h6>This is an h6 heading</h6>

  Additionally, we add classnames so you
  can apply the styling of, for instance, an h1 to an h2.

  Example: H1 styled like an H3
  <h1 class="h3">This is an h1 but looks like an h3</h1>

------------------------------------------------------ */
h1, .h1 {
  margin-bottom: 1em; }

h2, .h2 {
  margin-bottom: 1em; }

h3, .h3 {
  margin-bottom: 1em; }

h4, .h4 {
  margin-bottom: 1em; }

h5, .h5 {
  margin-bottom: 1em; }

h6, .h6 {
  margin-bottom: 1em; }

/**

  @text
--------------------------------------------------------
  elements/text.scss
--------------------------------------------------------

  Some basic styles to paragraphs and
  inline styles

-----------------------------------------------------  */
/* @anti-fout
------------------------------------------------------ */
.wf-loading h1, .wf-loading h2, .wf-loading h3, .wf-loading h4, .wf-loading h5, .wf-loading h6, .wf-loading
button, .wf-loading input, .wf-loading .btn, .wf-loading
p, .wf-loading ul, .wf-loading ol, .wf-loading blockquote {
  visibility: hidden; }
.wf-active h1, .wf-active h2, .wf-active h3, .wf-active h4, .wf-active h5, .wf-active h6, .wf-active
button, .wf-active input, .wf-active .btn, .wf-active
p, .wf-active ul, .wf-active ol, .wf-active blockquote {
  visibility: visible; }

/* @paragraphs
--------------------------------------------------------

  Example: Paragraphs
  <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>
  <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>

--------------------------------------------------------  */
p {
  margin-bottom: 1em;
  line-height: 1.40625em; }

/* @inline
--------------------------------------------------------

  Common inline elements

  Example: inline elements
  <p>Lorem Ipsum is <b>bold</b> text of the <strong>strong</strong> printing and typesetting industry. Lorem Ipsum is <i>italic</i> simply dummy text <em>emphasized</em> of the printing and typesetting industry.</p<

-------------------------------------------------------- */
b,
strong {
  font-weight: bold; }

i,
em {
  font-style: italic; }

/**

  @quotes
--------------------------------------------------------
  elements/quotes.scss
--------------------------------------------------------

  Blockquotes and pull quotes

-----------------------------------------------------  */
/* @blockquote
--------------------------------------------------------

  Example:
  <blockquote>
    <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>
    <cite><a href="http://foo.com">The source</a></cite>
  </blockquote>

  See http://html5doctor.com/cite-and-blockquote-reloaded/?utm_content=buffercaa2e&utm_source=buffer&utm_medium=twitter&utm_campaign=Buffer for details

-------------------------------------------------------- */
/* @pull-quote
--------------------------------------------------------

  Large quotes pulled from body text.

  Example:
  <blockquote class="pull-quote">
    <p>This is an awesome pull quote!</p>
  </blockquote>

-------------------------------------------------------- */
/**

  @lists
--------------------------------------------------------
  elements/lists.scss
--------------------------------------------------------

  Structure for lists

  Example: Unordered List
  <ul>
    <li>List item here</li>
    <li>List item here</li>
    <li>List item here</li>
    <li>List item here</li>
    <li>
      <ul>
        <li>Nested Item</li>
        <li>Nested Item</li>
        <li>Nested Item</li>
        <li>Nested Item</li>
      </ul>
    </li>
  </ul>

  Example: Ordered List
  <ol>
    <li>List item here</li>
    <li>List item here</li>
    <li>List item here</li>
    <li>List item here</li>
    <li>
      <ol>
        <li>Nested Item</li>
        <li>Nested Item</li>
        <li>Nested Item</li>
        <li>Nested Item</li>
      </ul>
    </li>
  </ol>

-------------------------------------------------------- */
ul,
ol {
  padding-left: 0;
  margin-left: 0;
  margin-bottom: 1em; }
  ul li,
  ol li {
    line-height: 2; }

/* @hr
--------------------------------------------------------
  elements/hr.scss
--------------------------------------------------------

  Horizontal Rule

  Example:
  <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>
  <hr>
  <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>

-------------------------------------------------------- */
hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0; }

/* @links
--------------------------------------------------------
  elements/links.scss
--------------------------------------------------------

  Links, <a> etc.
  & Webkit tap highlight

  Example: link
  <p>Lorem Ipsum is simply <a href="#">dummy text</a> of the printing and typesetting industry. Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>

-------------------------------------------------------- */
a {
  color: inherit;
  -moz-transition: opacity 1s, background-color 1s, color 1s;
  -o-transition: opacity 1s, background-color 1s, color 1s;
  -webkit-transition: opacity 1s, background-color 1s, color 1s;
  transition: opacity 1s, background-color 1s, color 1s;
  -moz-transform: translateY(0);
  -ms-transform: translateY(0);
  -o-transform: translateY(0);
  -webkit-transform: translateY(0);
  transform: translateY(0); }
  a:hover, a:focus {
    opacity: .75; }

body {
  -webkit-tap-highlight-color: rba(0, 0, 0, 0.35); }

/**

  @images
---------------------------------------------------------
  elements/images.scss
--------------------------------------------------------

  Base styling for images, plus some helpful utility
  classes that modify images.

  Note: You won't add any styling to these image classes,
        these are just utility classes

--------------------------------------------------------- */
/* @images
--------------------------------------------------------

  Base Image Style is 100% width by default

  Example: Image
  <img src="http://fillmurray.com/600/300">

------------------------------------------------------ */
img {
  width: 100%;
  max-width: 100%;
  height: auto;
  vertical-align: middle; }

/* @img--natural
--------------------------------------------------------

  Natural Images are 100% max-width, but their natural width by default

  Example: Image, Natural Width
  <img class="img--natural" src="http://fillmurray.com/600/300">

------------------------------------------------------ */
.img--natural {
  width: auto; }

/* @img--title
--------------------------------------------------------

  Title images fit within a heading/title element

  Example: Image inside a title (.img--title)
  <h1><img class="img--title" src="http://fillmurray.com/300/300"> Title Here versions of Lorem Ipsum.</h1>
  <h2><img class="img--title" src="http://fillmurray.com/300/300"> Title Here versions of Lorem Ipsum.</h2>
  <h3><img class="img--title" src="http://fillmurray.com/300/300"> Title Here versions of Lorem Ipsum.</h3>

------------------------------------------------------ */
.img--title {
  height: 1em;
  width: auto;
  vertical-align: top; }

/* @img--placement
--------------------------------------------------------

  Here are a few helper classes to position images, particularly
  helpful inside paragraphs.

  Example: Image Right
  <p><img class="img--right" src="http://fillmurray.com/400/300"> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p><p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>

  Example: Image, Natural Width
  <p><img class="img--left" src="http://fillmurray.com/400/300"> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p><p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>

  Example: Image, Center
  <p><img class="img--center" src="http://fillmurray.com/400/300"> Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p><p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>

------------------------------------------------------ */
.img--right {
  width: auto;
  float: right;
  margin-bottom: 1em;
  margin-left: 1em; }

.img--left {
  width: auto;
  float: left;
  margin-right: 1em;
  margin-bottom: 1em; }

.img--center {
  width: auto;
  display: block;
  margin-right: auto;
  margin-bottom: 1em;
  margin-left: auto; }

.img--right img,
.img--left img,
.img--center img {
  width: auto; }

/* @img--circle
--------------------------------------------------------

  Popular circle image for bios etc.

  Example: Circle image
  <img class="img--circle" src="http://fillmurray.com/400/400">

------------------------------------------------------ */
.img--circle {
  border-radius: 50%; }

/* Have something else to add?
--------------------------------------------------------
  + Add any new modifier classes below
------------------------------------------------------ */
/**

  @forms
---------------------------------------------------------
  elements/forms.scss
--------------------------------------------------------

  Base styles for all forms and form related elements

  Below you'll set styles for all forms, and if you have
  any specific kinds of forms, like a search form that you
  create a classname of form--search, put that at the
  bottom of this partial.

  This scss partial is pretty big.  Here's how it is
  organized.

  * Base styling on form elements

  * Styles for form & form modules


--------------------------------------------------------- */
/* @text inputs
--------------------------------------------------------

  Base styles for inputs

  Example: Text Input
  <input type="text" name="schramburger" placeholder="Your Name">

  Inputs can use sizing classes, .input--s .input--l

  Example: Text Small Input
  <input class="input--s" type="text" name="schramburger" placeholder="Your Name">

  Example: Text Input
  <input class="input--l" type="text" name="schramburger" placeholder="Your Name">

------------------------------------------------------ */
input[type=text],
input[type=password],
input[type=email],
input[type=url],
input[type=number],
input[type=datetime],
input[type=date],
input[type=tel],
input[type=month],
input[type=week],
input[type=search],
input[type=submit] {
  -webkit-appearance: none;
  border-radius: 0;
  width: 100%;
  padding: 1em;
  border: 1px solid #515554;
  color: #515554; }
  @media (min-width: 20em) {
    input[type=text],
    input[type=password],
    input[type=email],
    input[type=url],
    input[type=number],
    input[type=datetime],
    input[type=date],
    input[type=tel],
    input[type=month],
    input[type=week],
    input[type=search],
    input[type=submit] {
      font-size: 125%; } }
  @media (min-width: 25em) {
    input[type=text],
    input[type=password],
    input[type=email],
    input[type=url],
    input[type=number],
    input[type=datetime],
    input[type=date],
    input[type=tel],
    input[type=month],
    input[type=week],
    input[type=search],
    input[type=submit] {
      font-size: 122.91667%; } }
  @media (min-width: 30em) {
    input[type=text],
    input[type=password],
    input[type=email],
    input[type=url],
    input[type=number],
    input[type=datetime],
    input[type=date],
    input[type=tel],
    input[type=month],
    input[type=week],
    input[type=search],
    input[type=submit] {
      font-size: 120.83333%; } }
  @media (min-width: 35em) {
    input[type=text],
    input[type=password],
    input[type=email],
    input[type=url],
    input[type=number],
    input[type=datetime],
    input[type=date],
    input[type=tel],
    input[type=month],
    input[type=week],
    input[type=search],
    input[type=submit] {
      font-size: 118.75%; } }
  @media (min-width: 40em) {
    input[type=text],
    input[type=password],
    input[type=email],
    input[type=url],
    input[type=number],
    input[type=datetime],
    input[type=date],
    input[type=tel],
    input[type=month],
    input[type=week],
    input[type=search],
    input[type=submit] {
      font-size: 116.66667%; } }
  @media (min-width: 45em) {
    input[type=text],
    input[type=password],
    input[type=email],
    input[type=url],
    input[type=number],
    input[type=datetime],
    input[type=date],
    input[type=tel],
    input[type=month],
    input[type=week],
    input[type=search],
    input[type=submit] {
      font-size: 114.58333%; } }
  @media (min-width: 50em) {
    input[type=text],
    input[type=password],
    input[type=email],
    input[type=url],
    input[type=number],
    input[type=datetime],
    input[type=date],
    input[type=tel],
    input[type=month],
    input[type=week],
    input[type=search],
    input[type=submit] {
      font-size: 112.5%; } }
  @media (min-width: 55em) {
    input[type=text],
    input[type=password],
    input[type=email],
    input[type=url],
    input[type=number],
    input[type=datetime],
    input[type=date],
    input[type=tel],
    input[type=month],
    input[type=week],
    input[type=search],
    input[type=submit] {
      font-size: 110.41667%; } }
  @media (min-width: 60em) {
    input[type=text],
    input[type=password],
    input[type=email],
    input[type=url],
    input[type=number],
    input[type=datetime],
    input[type=date],
    input[type=tel],
    input[type=month],
    input[type=week],
    input[type=search],
    input[type=submit] {
      font-size: 108.33333%; } }
  @media (min-width: 65em) {
    input[type=text],
    input[type=password],
    input[type=email],
    input[type=url],
    input[type=number],
    input[type=datetime],
    input[type=date],
    input[type=tel],
    input[type=month],
    input[type=week],
    input[type=search],
    input[type=submit] {
      font-size: 106.25%; } }
  @media (min-width: 70em) {
    input[type=text],
    input[type=password],
    input[type=email],
    input[type=url],
    input[type=number],
    input[type=datetime],
    input[type=date],
    input[type=tel],
    input[type=month],
    input[type=week],
    input[type=search],
    input[type=submit] {
      font-size: 104.16667%; } }
  @media (min-width: 75em) {
    input[type=text],
    input[type=password],
    input[type=email],
    input[type=url],
    input[type=number],
    input[type=datetime],
    input[type=date],
    input[type=tel],
    input[type=month],
    input[type=week],
    input[type=search],
    input[type=submit] {
      font-size: 102.08333%; } }
  @media (min-width: 80em) {
    input[type=text],
    input[type=password],
    input[type=email],
    input[type=url],
    input[type=number],
    input[type=datetime],
    input[type=date],
    input[type=tel],
    input[type=month],
    input[type=week],
    input[type=search],
    input[type=submit] {
      font-size: 100%; } }
  input[type=text]:focus,
  input[type=password]:focus,
  input[type=email]:focus,
  input[type=url]:focus,
  input[type=number]:focus,
  input[type=datetime]:focus,
  input[type=date]:focus,
  input[type=tel]:focus,
  input[type=month]:focus,
  input[type=week]:focus,
  input[type=search]:focus,
  input[type=submit]:focus {
    outline: none; }
  input[type=text].input--s,
  input[type=password].input--s,
  input[type=email].input--s,
  input[type=url].input--s,
  input[type=number].input--s,
  input[type=datetime].input--s,
  input[type=date].input--s,
  input[type=tel].input--s,
  input[type=month].input--s,
  input[type=week].input--s,
  input[type=search].input--s,
  input[type=submit].input--s {
    font-size: .5rem; }
  input[type=text].input--l,
  input[type=password].input--l,
  input[type=email].input--l,
  input[type=url].input--l,
  input[type=number].input--l,
  input[type=datetime].input--l,
  input[type=date].input--l,
  input[type=tel].input--l,
  input[type=month].input--l,
  input[type=week].input--l,
  input[type=search].input--l,
  input[type=submit].input--l {
    font-size: 1.5rem; }

input::-webkit-input-placeholder {
  color: #515554; }
input:-moz-placeholder {
  color: #515554; }
input::-moz-placeholder {
  color: #515554; }
input:-ms-input-placeholder {
  color: #515554; }

input:focus::-webkit-input-placeholder {
  opacity: .3; }
input:focus:-moz-placeholder {
  opacity: .3; }
input:focus::-moz-placeholder {
  opacity: .3; }
input:focus:-ms-input-placeholder {
  opacity: .3; }

/* @select inputs
--------------------------------------------------------

  Base styling for all selects

  Example: Select Input
  <select name="schramburger">
    <option value="value-1">Option 1</option>
    <option value="value-2">Option 2</option>
    <option value="value-3">Option 3</option>
    <option value="value-4">Option 4</option>
  </select>

  Selects can have added sizing classes, .select--s and .select--l

  Example: Small select
  <select name="schramburger" class="select--s">
    <option value="value-1">Option 1</option>
    <option value="value-2">Option 2</option>
    <option value="value-3">Option 3</option>
    <option value="value-4">Option 4</option>
  </select>

  Example: Large select
  <select name="schramburger" class="select--l">
    <option value="value-1">Option 1</option>
    <option value="value-2">Option 2</option>
    <option value="value-3">Option 3</option>
    <option value="value-4">Option 4</option>
  </select>

------------------------------------------------------ */
select {
  width: 100%;
  font-size: 1rem; }
  select.select--s {
    font-size: .5rem; }
  select.select--l {
    font-size: 1.5rem; }

/* @textareas
--------------------------------------------------------

  Base styling for textareas

  Textareas can have .textarea--s or .textarea--l classes
  for different sizes

  Example: Textarea
  <textarea name="schramburger">Hello, there.</textarea>

  Example: Small Textarea
  <textarea class="textarea--s" name="schramburger">Hello, there.</textarea>

  Example: Large Textarea
  <textarea class="textarea--l" name="schramburger">Hello, there.</textarea>

------------------------------------------------------ */
textarea {
  width: 100%;
  font-size: 2em;
  min-height: 6em;
  padding: .5em;
  border: 1px none; }
  textarea:focus {
    outline: none; }
  textarea.textarea--s {
    font-size: .5rem; }
  textarea.textarea--l {
    font-size: 1.5rem; }

/* @radio inputs
--------------------------------------------------------

  Base styling for radio inputs.  Radios are surrounded
  by a label for better click targets.

  Example: Radio
  <label class="label--radio" for="radio-1"><input id="radio-1" type="radio" value="yes"> Radio label</label>

  Example: Radio with super-long label
  <label class="label--radio" for="radio-3"><input id="radio-3" type="radio" value="yes"> Radio label Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ratione, accusantium ipsum animi perspiciatis officiis iure voluptatibus corporis. Enim, officia, tempora vitae libero dolore sint voluptatum. Blanditiis odit laudantium minus repellat</label>


------------------------------------------------------ */
input[type=radio] {
  -webkit-appearance: none;
  width: 1em;
  height: 1em;
  border-radius: 50%;
  border: 1px solid #444;
  background: transparent; }
  input[type=radio]:checked {
    background: #222; }

.label--radio {
  display: inline-block;
  position: relative;
  cursor: pointer;
  padding-left: 1.25em; }
  .label--radio input {
    position: absolute;
    top: .2em;
    left: 0; }

/* @checkbox inputs
--------------------------------------------------------

  Base styling for checkbox inputs.  Checkboxes are surrounded
  by a label for better click targets.

  Example: Checkbox
  <label class="label--checkbox" for="checkbox-1"><input id="checkbox-1" type="checkbox" value="yes"> Checkbox label</label>

  Example: Checkbox with super-long label
  <label class="label--checkbox" for="checkbox-3"><input id="checkbox-3" type="checkbox" value="yes"> Checkbox label Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ratione, accusantium ipsum animi perspiciatis officiis iure voluptatibus corporis. Enim, officia, tempora vitae libero dolore sint voluptatum. Blanditiis odit laudantium minus repellat</label>


------------------------------------------------------ */
input[type=checkbox] {
  -webkit-appearance: none;
  width: 1em;
  height: 1em;
  border: 1px solid #444;
  background: transparent; }
  input[type=checkbox]:checked {
    background: #222; }

.label--checkbox {
  display: inline-block;
  position: relative;
  cursor: pointer;
  padding-left: 1.25em; }
  .label--checkbox input {
    position: absolute;
    top: .2em;
    left: 0; }

/* @labels
--------------------------------------------------------

  Base styling for labels

  Example: label
  <label>Don't label me, I'm a free spirit</labe>

------------------------------------------------------ */
label {
  font-size: 1em;
  font-weight: bold; }

/* @form
--------------------------------------------------------

  Like the bootstrap convention, apply standard styling
  on any form with the classname .form

  This allows us to create modifier classnames like
  .form--inline and .form--horizontal, which will be
  laid out further below.

------------------------------------------------------ */
.form {
  display: block; }

/* @form-header
--------------------------------------------------------

  A form header usually consists of a title and some
  copy.

  Example: Form header
  <header class="form__header">
    <h2>Contact Us</h2>
    <p>Use this form to contact us.  We love talking to
    our customers.</p>
  </header>

-------------------------------------------------------- */
/* @fieldsets
--------------------------------------------------------

  Fieldsets group together related fields.

  Example: Fieldset
  <fieldset>
    <legend>Personal Information</legend>
    <article class="field">
      <label class="field__label" for="exampleInput1">Your Name</label>
      <input class="field__input="exampleInput1" type="text" required="required" placeholder="Your name">
      <span class="field__feedback"></span>
      <span class="field__hint"></span>
    </article>
    <article class="field">
      <label class="field__label" for="exampleInput2">Your Email</label>
      <input class="field__input="exampleInput2" type="email" required="required" placeholder="Your email">
      <span class="field__feedback"></span>
      <span class="field__hint">Must be a valid email address</span>
    </article>
  </fieldset>

  Fieldsets are also nested inside other fieldsets.

  Example: Nested Fieldsets
  <fieldset>
    <legend>Personal Information</legend>
    <article class="field">
      <label class="field__label" for="exampleInput31">Your Name</label>
      <input class="field__input="exampleInput31" type="text" required="required" placeholder="Your name">
      <span class="field__feedback"></span>
      <span class="field__hint"></span>
    </article>
    <article class="field">
      <label class="field__label" for="exampleInput32">Your Email</label>
      <input class="field__input="exampleInput32" type="email" required="required" placeholder="Your email">
      <span class="field__feedback"></span>
      <span class="field__hint">Must be a valid email address</span>
    </article>
    <fieldset>
      <legend>Address</legend>
        <article class="field">
          <label class="field__label" for="exampleInput33">Address 1</label>
          <input class="field__input="exampleInput33" type="text" required="required" placeholder="Address 1">
          <span class="field__feedback"></span>
          <span class="field__hint">Must be a valid email address</span>
        </article>
        <article class="field">
          <label class="field__label" for="exampleInput34">Address 2</label>
          <input class="field__input="exampleInput34" type="text" required="required" placeholder="Address 2">
          <span class="field__feedback"></span>
          <span class="field__hint">Must be a valid email address</span>
        </article>
    </fieldset>
  </fieldset>

-------------------------------------------------------- */
fieldset {
  border: none; }

/* @fields
--------------------------------------------------------

  A field is an article that contains the input and anything
  related to the input.

  Example: Field for a text input
  <article class="field">
    <label class="field__label" for="exampleInput1">Your Name</label>
    <input class="field__input="exampleInput1" type="text" required="required" placeholder="Your name">
    <span class="field__feedback"></span>
    <span class="field__hint"></span>
  </article>

  Example: Field with hint
  <article class="field">
    <label class="field__label" for="exampleInput2">Your Email</label>
    <input class="field__input="exampleInput2" type="email" required="required" placeholder="Your email">
    <span class="field__feedback"></span>
    <span class="field__hint">Must be a valid email address</span>
  </article>

  Example: Field with Error
  <article class="field is-error">
    <label class="field__label" for="exampleInput3">Your Email</label>
    <input class="field__input="exampleInput3" type="email" required="required" placeholder="Your email">
    <span class="field__feedback">Sorry, that email is in use.</span>
    <span class="field__hint"></span>
  </article>

  Example: Field for a select input
  <article class="field">
    <label class="field__label" for="exampleInput4" >Select your favorite</label>
    <select class="field__input input--select" id="exampleInput4"  name="favorite-food">
      <option>Pizza</option>
      <option>Tacos</option>
      <option>Burgers</option>
    </select>
    <span class="field__feedback"></span>
    <span class="field__hint"></span>
  </article>

  Example: Field for a textarea input
  <article class="field">
    <label class="field__label">Your Name</label>
    <textarea class="field__input">Hello, there</textarea>
    <span class="field__feedback"></span>
    <span class="field__hint"></span>
  </article>

-------------------------------------------------------- */
.field {
  position: relative; }

.field__label {
  display: block; }

.field__hint {
  color: #888;
  font-size: .75em;
  padding: .25em 0;
  font-style: italic; }

.field__feedback {
  display: none;
  font-size: .75em;
  padding: .25em .75em;
  background: rgba(218, 35, 0, 0.3);
  color: white; }

.field.is-error .field__feedback {
  display: block; }
.field.is-error input {
  border: 1px solid rgba(218, 35, 0, 0.3); }

/* @input group
--------------------------------------------------------

  Group containing multiple inputs, helpful for lists
  of radios or checkboxes.  Shown below in a field...

  Example: Field with input group of radios
  <article class="field">
    <label class="field__label">Choose your favorite</label>
    <div class="field__input-group">
      <label class="label--radio" for="favorite-food-1"><input id="favorite-food-1" name="favorite-food" type="radio" value="pizza"> Pizza</label>
      <label class="label--radio" for="favorite-food-2"><input id="favorite-food-2" name="favorite-food" type="radio" value="tacos"> Tacos</label>
      <label class="label--radio" for="favorite-food-3"><input id="favorite-food-3" name="favorite-food" type="radio" value="burgers"> Burgers</label>
    </div>
    <span class="field__feedback"></span>
    <span class="field__hint"></span>
  </article>

  Example: Field with input group of checkboxes
  <article class="field">
    <label class="field__label">Select your favorites</label>
    <div class="field__input-group">
      <label class="label--checkbox" for="favorite-food-4"><input id="favorite-food-4" name="favorite-food-alt" type="checkbox" value="pizza"> Pizza</label>
      <label class="label--checkbox" for="favorite-food-5"><input id="favorite-food-5" name="favorite-food-alt" type="checkbox" value="tacos"> Tacos</label>
      <label class="label--checkbox" for="favorite-food-6"><input id="favorite-food-6" name="favorite-food-alt" type="checkbox" value="burgers"> Burgers</label>
    </div>
    <span class="field__feedback"></span>
    <span class="field__hint"></span>
  </article>

  Example: Field with input group list modifier
  <article class="field">
    <label class="field__label">Select your favorites</label>
    <div class="field__input-group--list">
      <label class="label--checkbox" for="favorite-food-7"><input id="favorite-food-7" name="favorite-food-alt2" type="checkbox" value="pizza"> Pizza</label>
      <label class="label--checkbox" for="favorite-food-8"><input id="favorite-food-8" name="favorite-food-alt2" type="checkbox" value="tacos"> Tacos</label>
      <label class="label--checkbox" for="favorite-food-9"><input id="favorite-food-9" name="favorite-food-alt2" type="checkbox" value="burgers"> Burgers</label>
    </div>
    <span class="field__feedback"></span>
    <span class="field__hint"></span>
  </article>

------------------------------------------------------ */
.field__input-group {
  display: block; }
  .field__input-group > * {
    display: inline-block;
    margin-right: .5em; }
    .field__input-group > *:last-child {
      margin-right: 0; }

.field__input-group--list {
  display: block; }
  .field__input-group--list > * {
    display: block;
    margin: .5em 0; }
    .field__input-group--list > *:last-child {
      margin-bottom: 0; }

/* @form action
--------------------------------------------------------

  Each form has an actions footer at the bottom to
  submit the form

  Example: Form Actions Footer
  <footer class="form__actions">
  <article class="field two-fiths">
    <label class="field__label is-visually-hidden" for="exampleInput7" >Submit</label>
    <input class="field__input btn btn--block" type="submit" id="exampleInput7" value="Submit">
    <span  class="field__feedback"></span>
    <span  class="field__hint"></span>
  </article>
  </footer>

--------------------------------------------------------- */
/* @inline forms using grids
--------------------------------------------------------

  Combine forms and grids to create an inline layout

  Example: Inline Form
  <form class="form">
    <div class="gw">
      <div class="g s-two-fifths">
        <article class="field">
          <label class="field__label is-visually-hidden" for="exampleInput8" >Email</label>
          <input class="field__input" type="email" id="exampleInput8" placeholder="Your email">
          <span  class="field__feedback"></span>
          <span  class="field__hint"></span>
        </article>
      </div>
      <div class="g s-two-fifths">
        <article class="field">
          <label class="field__label is-visually-hidden" for="exampleInput9" >Name</label>
          <input class="field__input" type="email" id="exampleInput9" placeholder="Your name">
          <span  class="field__feedback"></span>
          <span  class="field__hint"></span>
        </article>
      </div>
      <div class="g s-one-fifth">
        <article class="field">
          <input class="field__input btn" type="submit" value="submit">
        </article>
      </div>
    </div>
  </form>

--------------------------------------------------------- */
/* @horizontal forms using grids
--------------------------------------------------------

  Combine forms and grids to create a horizontal layout
  Note: you'll move the .field__label outside of the .field article for this

  Example: Inline Form
  <form class="form">
    <article class="field">
      <div class="gw">
        <div class="g s-one-half m-one-fifth">
          <label class="field__label" for="exampleInput10" >Email</label>
        </div>
        <div class="g s-one-half m-four-fifths">
          <input class="field__input" type="email" id="exampleInput10" placeholder="Your email">
          <span  class="field__feedback"></span>
          <span  class="field__hint"></span>
        </div>
      </div>
    </article>
    <article class="field">
      <div class="gw">
        <div class="g s-one-half m-one-fifth">
          <label class="field__label" for="exampleInput11" >Name</label>
        </div>
        <div class="g s-one-half m-four-fifths">
          <input class="field__input" type="text" id="exampleInput11" placeholder="Your name">
          <span  class="field__feedback"></span>
          <span  class="field__hint"></span>
        </div>
      </div>
    </article>
    <article class="field">
      <div class="gw">
        <div class="g s-one-half m-one-fifth">
          <label class="field__label">Select your favorites</label>
        </div>
        <div class="g s-one-half m-four-fifths">
          <div class="field__input-group--list">
            <label class="label--checkbox" for="favorite-food-17"><input id="favorite-food-17" name="favorite-food-alt2" type="checkbox" value="pizza"> Pizza</label>
            <label class="label--checkbox" for="favorite-food-18"><input id="favorite-food-18" name="favorite-food-alt2" type="checkbox" value="tacos"> Tacos</label>
            <label class="label--checkbox" for="favorite-food-19"><input id="favorite-food-19" name="favorite-food-alt2" type="checkbox" value="burgers"> Burgers</label>
          </div>
          <span class="field__feedback"></span>
          <span class="field__hint"></span>
      </div>
    </article>
    <footer class="form__actions">
      <div class="gw">
        <div class="g s-one-half m-one-fifth">
          <!--nuthin-->
        </div>
        <div class="g s-one-half m-four-fifths">
          <article class="field">
            <label class="field__label is-visually-hidden" for="submit10">Submit</label>
            <input class="field__input btn btn" id="submit10" value="Submit">
            <span class="field__feedback"></span>
            <span class="field__hint"></span>
          </article>
        </div>
      </div>
    </footer>


  </form>

--------------------------------------------------------- */
/**

  @buttons
--------------------------------------------------------
  elements/_buttons.scss
--------------------------------------------------------

  Buttons are a common UI component in sites/apps.  They
  are usually either anchor, button, or input elements
  with a classname of 'btn'.  They provide an easily
  identified clickable target.

  Buttons commonly have modifying classes that apply
  specific styles.  Examples of these are .btn--large and
  .btn--inline

  Also see _button-groups.scss, a related component
  that arranges buttons into useful groups.

  Example: Buttons using anchors
  <p><a href="#" class="btn">Regular Button</a></p>

  Example: Buttons using buttons
  <p><button class="btn">Regular Button</button></p>

------------------------------------------------------ */
button:focus, button:active {
  outline: none;
  box-shadow: none;
  border: none; }

.btn {
  -webkit-appearance: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  display: inline-block;
  background: none;
  border: 1px solid white;
  font-size: 1.25em;
  text-transform: uppercase;
  text-decoration: none;
  letter-spacing: .225em;
  padding: 1em 1.25em;
  -moz-transition: opacity 1s, background-color 1s, color 1s;
  -o-transition: opacity 1s, background-color 1s, color 1s;
  -webkit-transition: opacity 1s, background-color 1s, color 1s;
  transition: opacity 1s, background-color 1s, color 1s;
  -moz-transform: translateY(0);
  -ms-transform: translateY(0);
  -o-transform: translateY(0);
  -webkit-transform: translateY(0);
  transform: translateY(0);
  -webkit-backface-visibility: hidden; }
  .btn:hover, .btn:focus, .btn:active {
    outline: none;
    box-shadow: none;
    background: rgba(255, 255, 255, 0.5); }
  @media (min-width: 20em) {
    .btn {
      font-size: 75%; } }
  @media (min-width: 25em) {
    .btn {
      font-size: 77.08333%; } }
  @media (min-width: 30em) {
    .btn {
      font-size: 79.16667%; } }
  @media (min-width: 35em) {
    .btn {
      font-size: 81.25%; } }
  @media (min-width: 40em) {
    .btn {
      font-size: 83.33333%; } }
  @media (min-width: 45em) {
    .btn {
      font-size: 85.41667%; } }
  @media (min-width: 50em) {
    .btn {
      font-size: 87.5%; } }
  @media (min-width: 55em) {
    .btn {
      font-size: 89.58333%; } }
  @media (min-width: 60em) {
    .btn {
      font-size: 91.66667%; } }
  @media (min-width: 65em) {
    .btn {
      font-size: 93.75%; } }
  @media (min-width: 70em) {
    .btn {
      font-size: 95.83333%; } }
  @media (min-width: 75em) {
    .btn {
      font-size: 97.91667%; } }
  @media (min-width: 80em) {
    .btn {
      font-size: 100%; } }

/* @btn--secondary
--------------------------------------------------------

  A btn modifier, secondary

  Example: .btn--secondary
  <a class="btn btn--secondary">Secondary button</a>

------------------------------------------------------ */
/* @btn--large
--------------------------------------------------------

  A btn modifier, large

  Example: .btn--large
  <a class="btn btn--large">Large button</a>

------------------------------------------------------ */
@media screen and (min-width: 34.375em) {
  .btn--large {
    font-size: 1.25em;
    padding: 1.25em 2.75em; } }

/* @btn--inline
--------------------------------------------------------

  A btn modifier, if this button is in a paragraph or
  in anything else that has a defined font-size, this
  modifier will make the btn inherit the font-size of
  the partent.

  Example: .btn--inline
  <p>Here's some text <a class="btn btn--inline">Cool button</a> text keeps going</p>

------------------------------------------------------ */
.btn--inline {
  font-size: 1em; }

/* @btn--block
--------------------------------------------------------

  A btn modifier - makes the button display block, 100%
  width and aligns the text to the center.  Removes left
  and right padding since the text is center aligned, it
  is not needed.  Actually sometimes having the padding
  on the left and right causes problems if the centered
  text is quite long - so we just remove it.

  Example: .btn--block
  <a href="#" class="btn btn--block">Block button</a>

------------------------------------------------------ */
.btn--block {
  display: block;
  width: 100%;
  text-align: center;
  padding-right: 0;
  padding-left: 0; }

/* @btn--icon
--------------------------------------------------------

  A btn modifier - makes the button display block, 100%
  width and aligns the text to the center.  Removes left
  and right padding since the text is center aligned, it
  is not needed.  Actually sometimes having the padding
  on the left and right causes problems if the centered
  text is quite long - so we just remove it.

  Example: .btn--icon
  <button class="btn--icon ss-icon">Block button</button>

------------------------------------------------------ */
.btn--icon {
  -webkit-appearance: none;
  background: transparent;
  border: none;
  padding: 0;
  font-size: 1em; }

/**

  @icons
---------------------------------------------------------
  elements/icons.scss
--------------------------------------------------------

  Define classes for icons.  First a base class, .icon, and
  then any modifiers.

  Near the end of this partial, we're including symbolset,
  which is a font-icon that we dig.

--------------------------------------------------------- */
/* @icon
--------------------------------------------------------

  Your open and close icons

  Example: Open Icon
  <i class="icon icon--open">&plus;</i>

  Example: Close Icon
  <i class="icon icon--close">&times;</i>

------------------------------------------------------ */
.icon {
  color: inherit;
  display: inline-block;
  font-style: normal;
  vertical-align: middle;
  font-size: 1em; }
  .icon img {
    height: 1em;
    width: auto; }

/* @symbolset
--------------------------------------------------------

  Symbolset
  www.symbolset.com
  Copyright © 2012 Oak Studios LLC

------------------------------------------------------ */
/***

  @modules
---------------------------------------------------------

  Reusable objects that are combinations
  of elements and other modules.

  When you create a new module, make sure the partial is
  in the modules directory, and you import it below

  Comment out any partial you don't need for this app.

---------------------------------------------------------  */
/**

   @site
--------------------------------------------------------
  modules/_site.scss
--------------------------------------------------------

  This is a utility div to wrap the whole site

------------------------------------------------------ */
/**

  @site-header
--------------------------------------------------------
  modules/site-header.scss
--------------------------------------------------------

  Site-wide header

------------------------------------------------------ */
.site-header {
  zoom: 1;
  padding-top: 1.125em;
  padding-bottom: 1.125em;
  border-bottom: 1px solid #cfd2d2; }
  .site-header:before, .site-header:after {
    content: " ";
    display: table; }
  .site-header:after {
    clear: both; }
  @media screen and (min-width: 34.375em) {
    .site-header {
      padding-top: 2.25em; } }
  @media screen and (min-width: 48em) {
    .site-header {
      padding-top: 2.25em; } }
  @media screen and (min-width: 64em) {
    .site-header {
      padding-top: 3.375em; } }
  @media screen and (min-width: 78.5em) {
    .site-header {
      padding-top: 4.5em; } }
  @media screen and (min-width: 100em) {
    .site-header {
      padding-top: 5.625em; } }
  @media screen and (min-width: 34.375em) {
    .site-header {
      padding-bottom: 2.25em; } }
  @media screen and (min-width: 48em) {
    .site-header {
      padding-bottom: 2.25em; } }
  @media screen and (min-width: 64em) {
    .site-header {
      padding-bottom: 3.375em; } }
  @media screen and (min-width: 78.5em) {
    .site-header {
      padding-bottom: 4.5em; } }
  @media screen and (min-width: 100em) {
    .site-header {
      padding-bottom: 5.625em; } }

/* @branding
--------------------------------------------------------

  The logo & (optional) wordmark

  Example: Branding logo
  <a class="branding" href="/">
    <img class="branding__logo img--title" src="images/logo.svg" alt="My Company">
    <h1 class="branding__wordmark">My Company</h1>
  </a>

------------------------------------------------------ */
.branding {
  margin-top: 0em;
  margin-right: auto;
  margin-bottom: 1.125em;
  margin-left: auto;
  text-decoration: none;
  display: block;
  text-align: center; }
  @media screen and (min-width: 34.375em) {
    .branding {
      margin-top: 0em; } }
  @media screen and (min-width: 48em) {
    .branding {
      margin-top: 0em; } }
  @media screen and (min-width: 64em) {
    .branding {
      margin-top: 0em; } }
  @media screen and (min-width: 78.5em) {
    .branding {
      margin-top: 0em; } }
  @media screen and (min-width: 100em) {
    .branding {
      margin-top: 0em; } }
  @media screen and (min-width: 34.375em) {
    .branding {
      margin-bottom: 2.25em; } }
  @media screen and (min-width: 48em) {
    .branding {
      margin-bottom: 2.25em; } }
  @media screen and (min-width: 64em) {
    .branding {
      margin-bottom: 3.375em; } }
  @media screen and (min-width: 78.5em) {
    .branding {
      margin-bottom: 4.5em; } }
  @media screen and (min-width: 100em) {
    .branding {
      margin-bottom: 5.625em; } }
  @media screen and (min-width: 48em) {
    .branding {
      margin: 0;
      float: left;
      text-align: left; } }

.branding__logo {
  height: 3.375em;
  width: 3.375em; }
  @media screen and (min-width: 48em) {
    .branding__logo {
      float: left;
      margin-right: 1.125em; } }

.branding__wordmark {
  font-size: 1.6875em;
  white-space: nowrap;
  line-height: 2.25em;
  margin: 0; }

/*

  @site-nav
--------------------------------------------------------

  The main site navigation.

-----------------------------------------------------  */
.site-nav {
  text-align: center; }
  @media screen and (min-width: 48em) {
    .site-nav {
      float: right; } }
  .site-nav a {
    display: inline-block;
    height: 3.375em;
    line-height: 3.375em;
    padding: 0 .5em;
    margin-left: 0.5625em; }
    .site-nav a:first-child {
      margin-left: 0; }

/**

  @site-main
--------------------------------------------------------
  modules/site-main.scss
--------------------------------------------------------

  The site's main content

------------------------------------------------------ */
.site__main {
  display: block; }

/**

  @site-footer
--------------------------------------------------------
  modules/site-footer.scss
--------------------------------------------------------

  The site's footer

------------------------------------------------------ */
.site-footer {
  padding-top: 0.5625em;
  padding-bottom: 0.5625em;
  border-top: 1px solid #cfd2d2; }
  @media screen and (min-width: 34.375em) {
    .site-footer {
      padding-top: 1.125em; } }
  @media screen and (min-width: 48em) {
    .site-footer {
      padding-top: 1.125em; } }
  @media screen and (min-width: 64em) {
    .site-footer {
      padding-top: 1.6875em; } }
  @media screen and (min-width: 78.5em) {
    .site-footer {
      padding-top: 2.25em; } }
  @media screen and (min-width: 100em) {
    .site-footer {
      padding-top: 2.8125em; } }
  @media screen and (min-width: 34.375em) {
    .site-footer {
      padding-bottom: 1.125em; } }
  @media screen and (min-width: 48em) {
    .site-footer {
      padding-bottom: 1.125em; } }
  @media screen and (min-width: 64em) {
    .site-footer {
      padding-bottom: 1.6875em; } }
  @media screen and (min-width: 78.5em) {
    .site-footer {
      padding-bottom: 2.25em; } }
  @media screen and (min-width: 100em) {
    .site-footer {
      padding-bottom: 2.8125em; } }

.site-credits {
  display: block;
  clear: both; }

/**

  @pages
--------------------------------------------------------
  modules/_pages.scss
--------------------------------------------------------

  Pages have a title and content

-----------------------------------------------------  */
.page p {
  opacity: .8;
  font-size: 2em;
  margin: 0 auto 1em;
  line-height: 1.5;
  max-width: 25em; }

.page__title {
  padding-bottom: 1.125em; }
  @media screen and (min-width: 34.375em) {
    .page__title {
      padding-bottom: 2.25em; } }
  @media screen and (min-width: 48em) {
    .page__title {
      padding-bottom: 2.25em; } }
  @media screen and (min-width: 64em) {
    .page__title {
      padding-bottom: 3.375em; } }
  @media screen and (min-width: 78.5em) {
    .page__title {
      padding-bottom: 4.5em; } }
  @media screen and (min-width: 100em) {
    .page__title {
      padding-bottom: 5.625em; } }
  .page__title h1 {
    text-align: center;
    font-size: 3.9375em;
    line-height: 1.1em;
    font-style: italic; }

/**

  @alerts
---------------------------------------------------------
  modules/_alerts.scss
--------------------------------------------------------

  Alerts are UI elements that give important info

  Example: Error
  <div class="alert alert--error">
    <a href="#" class="btn__close">&times;</a>
    <p>Uh oh - something went wrong</p>
  </div>

  Example: Warning
  <div class="alert alert--warning">
    <a href="#" class="btn__close">&times;</a>
    <p>Shake it fast, but watch yourself.</p>
  </div>

  Example: Success
  <div class="alert alert--success">
    <a href="#" class="btn__close">&times;</a>
    <p>The secret to my success is that I learn, 25 hours a day!</p>
  </div>

  Example: Info
  <div class="alert alert--info">
    <a href="#" class="btn__close">&times;</a>
    <p>Did you ever know that you're my hero?</p>
  </div>

  NOTE: The code below uses declared color units, maybe it
        makes sense to declare those in _vars.scss

------------------------------------------------------ */
.alert {
  position: relative;
  border-width: 1px;
  border-style: solid;
  padding: .5rem 4rem .5rem .5rem;
  line-height: 1.25; }
  .alert:after {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    right: 2.25em;
    width: 1px;
    height: 100%;
    border-left: 1px solid #000; }
  .alert p {
    margin: 0; }
  .alert .btn__close {
    position: absolute;
    top: 50%;
    margin-top: -.75em;
    right: .5em;
    opacity: .5;
    -webkit-transition: all .3s;
    transition: all .3s; }
    .alert .btn__close:hover {
      opacity: 1; }

.alert--error {
  color: #e04646;
  border-color: #e04646;
  background: #ffe6e6; }
  .alert--error .btn__close {
    color: #e04646; }
  .alert--error:after {
    border-color: #e04646; }

.alert--warning {
  color: #b29804;
  border-color: #b29804;
  background: #fcf7d8; }
  .alert--warning .btn__close {
    color: #b29804; }
  .alert--warning:after {
    border-color: #b29804; }

.alert--info {
  color: #537df6;
  border-color: #537df6;
  background: #e8f3ff; }
  .alert--info .btn__close {
    color: #537df6; }
  .alert--info:after {
    border-color: #537df6; }

.alert--success {
  color: #0ca129;
  border-color: #0ca129;
  background: #dafce1; }
  .alert--success .btn__close {
    color: #0ca129; }
  .alert--success:after {
    border-color: #0ca129; }

/**

  @blocks
--------------------------------------------------------
  modules/_blocks.scss
--------------------------------------------------------

  Blocks contain sections of content.  Blocks can have
  different visual styling, but usually have the same
  structure; one spacing unit margin at the bottom,
  and some have borders, and padding, etc.

-----------------------------------------------------  */
.block {
  margin-bottom: 1.125em; }
  @media screen and (min-width: 34.375em) {
    .block {
      margin-bottom: 2.25em; } }
  @media screen and (min-width: 48em) {
    .block {
      margin-bottom: 2.25em; } }
  @media screen and (min-width: 64em) {
    .block {
      margin-bottom: 3.375em; } }
  @media screen and (min-width: 78.5em) {
    .block {
      margin-bottom: 4.5em; } }
  @media screen and (min-width: 100em) {
    .block {
      margin-bottom: 5.625em; } }

.block--ends {
  margin-top: 1.125em;
  margin-bottom: 1.125em; }
  @media screen and (min-width: 34.375em) {
    .block--ends {
      margin-top: 2.25em; } }
  @media screen and (min-width: 48em) {
    .block--ends {
      margin-top: 2.25em; } }
  @media screen and (min-width: 64em) {
    .block--ends {
      margin-top: 3.375em; } }
  @media screen and (min-width: 78.5em) {
    .block--ends {
      margin-top: 4.5em; } }
  @media screen and (min-width: 100em) {
    .block--ends {
      margin-top: 5.625em; } }
  @media screen and (min-width: 34.375em) {
    .block--ends {
      margin-bottom: 2.25em; } }
  @media screen and (min-width: 48em) {
    .block--ends {
      margin-bottom: 2.25em; } }
  @media screen and (min-width: 64em) {
    .block--ends {
      margin-bottom: 3.375em; } }
  @media screen and (min-width: 78.5em) {
    .block--ends {
      margin-bottom: 4.5em; } }
  @media screen and (min-width: 100em) {
    .block--ends {
      margin-bottom: 5.625em; } }

/**

  @callouts
--------------------------------------------------------
  modules/_callouts.scss
--------------------------------------------------------

  A Callout, in this context at least, is those sections
  of featured content that usually contain an icon, a
  title, and some text.  These are usually in a row, and
  call attention to highlighted features.

  Example: Callout
  <article class="callout">
    <img class="callout__media" src="images/fpo-icon.png">
    <h3 class="callout__title">Feature</h3>
    <p>This callout is very impressive, and should command your attention</p>
  </article>

-----------------------------------------------------  */
.callout {
  text-align: center; }

.callout__media {
  display: block;
  margin: 0 auto 1em;
  max-height: 3em;
  width: auto; }

.callout__title {
  font-size: 1.5em; }

/**

  @carousels
--------------------------------------------------------
  modules/_carousels.scss
--------------------------------------------------------

  Carousels use FlexSlider

  We'll add a title to the carousel module too

  There are variations of carousels, there's a small carousel
  and also different color themes

------------------------------------------------------ */
.carousel {
  position: relative; }

.carousel__direction-nav li {
  float: left; }

.carousel__prev,
.carousel__next {
  display: block;
  text-align: center; }
  .carousel__prev:hover,
  .carousel__next:hover {
    opacity: 1; }

/* Have something else to add?
--------------------------------------------------------
  + Add any new modifier classes below
------------------------------------------------------ */
/**

   @dropdowns
--------------------------------------------------------
  modules/_dropdowns.scss
--------------------------------------------------------

  NOTE: Cool dropdown stuff Coming soon

-----------------------------------------------------  */
/**

  @heroes
--------------------------------------------------------
  modules/_heroes.scss
--------------------------------------------------------

  Just your everyday, normal hero.  Contains a div that has
  the media (video or image) in the background, and a div
  for the main content.

  Example: Hero
  <div class="hero">
    <div class="hero__main">
      <h1 class="hero__leadin">This is the leadin</h1>
      <h2 class="hero__name">Name Here</h2>
    <div class="hero__media"><img src="http://fillmurray.com/1000/400"></div>
  </div>
------------------------------------------------------ */
.hero {
  position: relative;
  background: #515554;
  overflow: hidden;
  margin-bottom: 1.125em; }
  @media screen and (min-width: 34.375em) {
    .hero {
      margin-bottom: 2.25em; } }
  @media screen and (min-width: 48em) {
    .hero {
      margin-bottom: 2.25em; } }
  @media screen and (min-width: 64em) {
    .hero {
      margin-bottom: 3.375em; } }
  @media screen and (min-width: 78.5em) {
    .hero {
      margin-bottom: 4.5em; } }
  @media screen and (min-width: 100em) {
    .hero {
      margin-bottom: 5.625em; } }

.hero__media {
  position: relative;
  z-index: 200; }

.hero__main {
  position: absolute;
  z-index: 210;
  width: 100%;
  top: 50%;
  text-align: center;
  color: white;
  -moz-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  -o-transform: translateY(-50%);
  -webkit-transform: translateY(-50%);
  transform: translateY(-50%);
  font-size: .75em; }
  @media screen and (min-width: 34.375em) {
    .hero__main {
      font-size: 1em; } }
  @media screen and (min-width: 64em) {
    .hero__main {
      font-size: 1.25em; } }

/**

  @modals
---------------------------------------------------------
  modules/_modals.scss
--------------------------------------------------------

  These are very basic modals, there's room for improvement.

--------------------------------------------------------- */
.modal {
  position: fixed;
  z-index: 200;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  height: 100%;
  background: rgba(255, 255, 255, 0.96);
  display: none; }

.modal__container {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  display: table;
  height: 100%;
  padding-top: 1.125em;
  padding-right: 1.125em;
  padding-bottom: 1.125em;
  padding-left: 1.125em; }
  @media screen and (min-width: 34.375em) {
    .modal__container {
      padding-top: 2.25em; } }
  @media screen and (min-width: 48em) {
    .modal__container {
      padding-top: 2.25em; } }
  @media screen and (min-width: 64em) {
    .modal__container {
      padding-top: 3.375em; } }
  @media screen and (min-width: 78.5em) {
    .modal__container {
      padding-top: 4.5em; } }
  @media screen and (min-width: 100em) {
    .modal__container {
      padding-top: 5.625em; } }
  @media screen and (min-width: 34.375em) {
    .modal__container {
      padding-right: 2.25em; } }
  @media screen and (min-width: 48em) {
    .modal__container {
      padding-right: 2.25em; } }
  @media screen and (min-width: 64em) {
    .modal__container {
      padding-right: 3.375em; } }
  @media screen and (min-width: 78.5em) {
    .modal__container {
      padding-right: 4.5em; } }
  @media screen and (min-width: 100em) {
    .modal__container {
      padding-right: 5.625em; } }
  @media screen and (min-width: 34.375em) {
    .modal__container {
      padding-bottom: 2.25em; } }
  @media screen and (min-width: 48em) {
    .modal__container {
      padding-bottom: 2.25em; } }
  @media screen and (min-width: 64em) {
    .modal__container {
      padding-bottom: 3.375em; } }
  @media screen and (min-width: 78.5em) {
    .modal__container {
      padding-bottom: 4.5em; } }
  @media screen and (min-width: 100em) {
    .modal__container {
      padding-bottom: 5.625em; } }
  @media screen and (min-width: 34.375em) {
    .modal__container {
      padding-left: 2.25em; } }
  @media screen and (min-width: 48em) {
    .modal__container {
      padding-left: 2.25em; } }
  @media screen and (min-width: 64em) {
    .modal__container {
      padding-left: 3.375em; } }
  @media screen and (min-width: 78.5em) {
    .modal__container {
      padding-left: 4.5em; } }
  @media screen and (min-width: 100em) {
    .modal__container {
      padding-left: 5.625em; } }

.modal__close {
  position: absolute;
  top: 0;
  right: 0;
  margin-top: 0.37125em;
  margin-right: 0.37125em;
  font-size: 3em;
  border: none;
  background: none;
  display: block; }
  @media screen and (min-width: 34.375em) {
    .modal__close {
      margin-top: 0.7425em; } }
  @media screen and (min-width: 48em) {
    .modal__close {
      margin-top: 0.7425em; } }
  @media screen and (min-width: 64em) {
    .modal__close {
      margin-top: 1.11375em; } }
  @media screen and (min-width: 78.5em) {
    .modal__close {
      margin-top: 1.485em; } }
  @media screen and (min-width: 100em) {
    .modal__close {
      margin-top: 1.85625em; } }
  @media screen and (min-width: 34.375em) {
    .modal__close {
      margin-right: 0.7425em; } }
  @media screen and (min-width: 48em) {
    .modal__close {
      margin-right: 0.7425em; } }
  @media screen and (min-width: 64em) {
    .modal__close {
      margin-right: 1.11375em; } }
  @media screen and (min-width: 78.5em) {
    .modal__close {
      margin-right: 1.485em; } }
  @media screen and (min-width: 100em) {
    .modal__close {
      margin-right: 1.85625em; } }
  .modal__close:hover, .modal__close:focus {
    outline: none;
    border: none;
    opacity: .85; }
  .modal__close:active {
    opacity: .6; }

.modal__body {
  display: table-cell;
  height: 100%;
  width: 100%;
  vertical-align: middle; }
  .modal__body p {
    margin-bottom: 1em;
    font-size: 1.5em; }

/*

  @popovers
--------------------------------------------------------
  modules/_popovers.scss
--------------------------------------------------------

  TBD

------------------------------------------------------ */
/**

  @tabs
--------------------------------------------------------
  modules/_tabs.scss
--------------------------------------------------------

  Tabs.

------------------------------------------------------ */
.tab.is-active {
  pointer-events: none; }

.panels {
  position: relative; }

.panel {
  opacity: 0;
  position: absolute;
  top: -200%;
  left: -200%; }
  .panel.is-active {
    position: relative;
    opacity: 1;
    top: 0;
    left: 0; }

.panels.is-activated .panel.is-active {
  position: absolute; }

/**

  @thumbnails
--------------------------------------------------------
  modules/_thumbnails.scss
--------------------------------------------------------

  description

-----------------------------------------------------  */
@media (min-width: 0em) {
  .thumbnail {
    font-size: 200%; } }
@media (min-width: 20em) {
  .thumbnail {
    font-size: 150%; } }
@media (min-width: 34.375em) {
  .thumbnail {
    font-size: 100%; } }
.thumbnail a {
  text-decoration: none; }

.thumbnail__caption {
  text-align: center; }
  .thumbnail__caption h2, .thumbnail__caption h3 {
    text-decoration: none;
    margin: 0; }
  .thumbnail__caption h2 {
    color: #485250;
    font-size: 1.5em;
    line-height: 1.8;
    text-transform: uppercase;
    letter-spacing: .05em; }
  .thumbnail__caption h3 {
    font-size: 1.5em;
    line-height: 1;
    font-style: italic; }

/**

  @tooltips
---------------------------------------------------------
  modules/_tooltips.scss
--------------------------------------------------------

  Tooltips use bootstrap.js for now.

  <p>Tight pants next level keffiyeh <a href="#" data-toggle="tooltip" title="Default Tooltip">you probably</a>
   haven't heard of them. Photo booth beard raw denim
   letterpress vegan messenger bag stumptown.
   Farm-to-table seitan, mcsweeney's fixie sustainable
   quinoa 8-bit american apparel <a href="#" data-toggle="tooltip" title="Another tooltip">have a</a>
   terry richardson vinyl chambray. Beard stumptown, cardigans banh mi lomo thundercats.
  </p>

--------------------------------------------------------- */
/**

  @video
--------------------------------------------------------
  modules/_video-embeds.scss
--------------------------------------------------------

  Video Embeds

-----------------------------------------------------  */
.video-embed {
  display: block;
  width: 100%;
  height: 0;
  position: relative;
  padding-top: 66.666%; }
  .video-embed iframe {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    height: 100% !important;
    width: 100% !important; }

/**

  @grid guide
--------------------------------------------------------

  Styles for the Skyline Grid Guide jQuery plugin that
  shows grid guides overlayed on top of your site by
  pressing the 'g' key

-----------------------------------------------------  */
.skyline-grid-guide {
  opacity: .5;
  pointer-events: none;
  position: absolute;
  z-index: 3000;
  top: 0;
  left: 0;
  right: 0;
  overflow: hidden;
  width: 100%;
  min-height: 100%;
  display: none; }
  .skyline-grid-guide.is-active {
    display: block; }

.skyline-grid-guide .g {
  background: rgba(146, 189, 202, 0.25); }

.skyline-grid-guide .g div {
  background: rgba(255, 255, 255, 0.2);
  border-right: 1px solid rgba(255, 255, 255, 0.2);
  border-left: 1px solid rgba(255, 255, 255, 0.2);
  height: 8000px; }

.skyline-grid-guide__baselines {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  width: 100%; }

.skyline-grid-guide__baseline {
  display: block;
  height: 1.125em;
  border-bottom: 1px solid rgba(160, 155, 155, 0.4); }
